package yv.tils.migration

import data.Data
import yv.tils.migration.discord.DiscordMigrationLogic

/**
 * MigrationYVtils is a module for YVtils that handles the migration of data from previous versions.
 *
 * @deprecated This module will be removed with these releases:
 * yvtils-discord:4.1.0;
 * yvtils-smp:1.3.0;
 * yvtils-multiMine:1.3.0
 */
@Deprecated("This module will be removed with these releases: yvtils-discord:4.1.0; yvtils-smp:1.3.0; yvtils-multiMine:1.3.0")
class MigrationYVtils: Data.YVtilsModule {
    companion object {
        val MODULE = Data.YVtilsModuleData(
            name = "migration",
            version = "1.0.0",
            description = "Migration module for YVtils",
            author = "YVtils",
        )

        lateinit var oldPluginFolder: String
    }

    override fun onLoad() {
        // Get which plugin is starting
        when (Data.core.name.lowercase()) {
            "discord" -> {
                oldPluginFolder = "plugins/YVtils-DC"
                DiscordMigrationLogic().startMigration()
            }

            "smp" -> {
                oldPluginFolder = "plugins/YVtils-SMP"
                // Add SMP migration logic here if needed
            }

            "multiMine" -> {
                oldPluginFolder = "plugins/YVtils-MM"
                // Add MultiMine migration logic here if needed
            }
        }
    }

    override fun enablePlugin() {
        Data.addModule(MODULE)
    }

    override fun onLateEnablePlugin() {

    }

    override fun disablePlugin() {

    }

    fun cleanUpMigrationTool() {
        // This function will be used to clean up any files generated by the migration tool
        // This will be called, when the migration logic is getting removed from the plugin
        // This will be called for one full minor version after the migration logic is removed
    }
}
